# We have to disable the `build` command explicitly otherwise the default is
# MSBuild which assumes this is a Visual Studio project. Python source/binary
# wheels a Windows .exe are generated below in `install`.
build: false

environment:
  matrix:
    - PYTHON: "C:\\Python39-x64"

# SignPath Config
#deploy:
#- provider: Webhook
#  url: https://app.signpath.io/API/v1/f2efa44c-5b5c-45f2-b44f-8f9dde708313/Integrations/AppVeyor?ProjectSlug=PySceneDetect&SigningPolicySlug=release-signing
#  authorization:
#     secure: mdCtq1nvbA+ADEqG36J9szgR045RLAsBbc58b7rusEnSuUA7rHFE4jMZvtdr6ODZOJqYZX8i/0bTgFPiiG/2rA==

install:
  # TODO: Checkout a specific tag, for now just checking out latest to match the build changes.
  - git checkout v0.6

  # Setup Python environment and update basic packages.
  - 'SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%'
  - python --version
  - python -m pip install --upgrade pip
  - python -m pip install --upgrade setuptools wheel pyinstaller==4.10

  # Install PySceneDetect dependencies and checkout resources required for tests.
  - python -m pip install -r dist/requirements_windows.txt

  # Checkout all Windows build dependencies and extract them.
  - git checkout refs/remotes/origin/resources -- dist/
  # TODO: Update branch name below when merging with main build-windows branch.
  - git checkout refs/remotes/origin/build-windows_installersetup -- dist/
  - 7z e windows_thirdparty.7z
  - move ffmpeg.exe dist/windows/
  - move mkvmerge.exe dist/windows/

  # Build Windows .EXE.
  - pyinstaller dist/scenedetect.spec
  - python dist/cleanup_dependencies.py
  # Create portable ZIP
  - 7z a dist/scenedetect-win64.zip dist/scenedetect/*

  # Download and install AdvancedInstaller
  - appveyor DownloadFile https://www.advancedinstaller.com/downloads/advinst.msi
  - msiexec /i advinst.msi /qn
  - 'SET PATH=%PATH%;C:\\Program Files (x86)\\Caphyon\\Advanced Installer 19.4\\bin\\x86'
  # Create MSI installer
  - AdvancedInstaller.com /build dist/installer/PySceneDetect.aip

test_script:
  # Checkout required test resources
  - git fetch --depth=1 https://github.com/Breakthrough/PySceneDetect.git refs/heads/resources:refs/remotes/origin/resources
  - git checkout refs/remotes/origin/resources -- tests/resources/
  - cp dist/windows/ffmpeg.exe .
  - cp dist/windows/mkvmerge.exe .
  # Run unit tests
  - pytest
  # Test Windows build
  - cd dist/scenedetect
  - scenedetect.exe version
  - scenedetect.exe -i ../../tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
  - scenedetect.exe -i ../../tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s

artifacts:
  # Portable ZIP
  - path: dist/scenedetect-win64.zip
    name: PySceneDetect-win64_portable
  # MSI Installer
  - path: dist/installer/PySceneDetect-0.6-win64.msi
    name: PySceneDetect-win64_installer
