
name: Linux Build

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.rst'
      - docs/**
      - website/**
  push:
    paths-ignore:
      - '**.md'
      - '**.rst'
      - docs/**
      - website/**

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]
        # TODO(#292): Add a Python 3.11 builder once binary wheels of PyAV are available.
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Dependencies
        # TODO: `opencv-python-headless` is pinned for the xenial build. Unpin `opencv-python-headless`
        # when https://github.com/opencv/opencv/issues/23090 is resolved.
        # TODO: `setuptools` is pinned for the Python 3.7 builder and can be unpinned when removed.
        run: |
          python -m pip install --upgrade pip build wheel virtualenv setuptools==62.3.4
          pip install av==9.2 opencv-python-headless==4.6.0.66 --only-binary :all:
          pip install -r requirements_headless.txt

      - name: Checkout test resources
        run: |
          git fetch --depth=1 https://github.com/Breakthrough/PySceneDetect.git refs/heads/resources:refs/remotes/origin/resources
          git checkout refs/remotes/origin/resources -- tests/resources/

      - name: Build Package
        run: |
          python -m build
          echo "scenedetect_version=`python -c \"import scenedetect; print(scenedetect.__version__[1:].replace('-', '.'))\"`" >> "$GITHUB_ENV"

      - name: Unit Tests
        run: |
          python -m pytest tests/
      # TODO: Install ffmpeg/mkvtoolnix to run split-video tests. They will be skipped if the tools are unavailable.

      - name: Smoke Test (Module)
        run: |
          python -m scenedetect version
          python -m scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
          python -m scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
          python -m pip uninstall -y scenedetect

      - name: Smoke Test (Source Dist)
        run: |
          python -m pip install dist/scenedetect-${{ env.scenedetect_version }}.tar.gz
          scenedetect version
          scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
          scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
          python -m pip uninstall -y scenedetect

      - name: Smoke Test (Wheel)
        run: |
          python -m pip install dist/scenedetect-${{ env.scenedetect_version }}-py3-none-any.whl
          scenedetect version
          scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
          scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
          python -m pip uninstall -y scenedetect
