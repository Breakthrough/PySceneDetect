# Generate PySceneDetect documentation and updates the gh-pages branch.
name: Generate Documentation

on:
  push:
    branches:
      - main
      - develop
      - 'releases/**'
    paths:
      - 'docs/**'
  workflow_dispatch:

jobs:
  update_docs:
    runs-on: ubuntu-latest
    env:
      scenedetect_docs_dest: ${{ github.ref_name == 'refs/heads/main' && 'latest' || 'develop' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip build wheel virtualenv
          pip install -r docs/requirements.txt
          echo "scenedetect_docs_dest=unknown" >> "$GITHUB_ENV"

      - name: Set Destination (Releases)
        if: ${{ contains(github.ref_name, 'releases') }}
        run: |
          echo "scenedetect_docs_dest=$(echo ${{ github.ref_name }} | cut -b 10-)" >> "$GITHUB_ENV"

      - name: Check Destination
        if: ${{ env.scenedetect_docs_dest == '' }}
        run: |
          echo "Failing build: destination must be set!"

      - name: Generate Docs
        run: |
          sphinx-build -b html docs build

      - name: Update gh-pages Branch
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          git rm "docs/${{ env.scenedetect_docs_dest }}" -r -f --ignore-unmatch
          git add build/
          git mv build "docs/${{ env.scenedetect_docs_dest }}"
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git commit -a -m "[docs] @${{ github.triggering_actor }}: Generate Documentation" \
            -m "Source: ${{ github.ref_name }} (${{ github.sha }})" \
            -m "Destination: ${{ env.scenedetect_docs_dest }}"
          git push
