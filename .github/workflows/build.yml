# Test PySceneDetect on Linux/OSX/Windows and generate Python distribution (sdist/wheel).
name: Python Distribution

on:
  pull_request:
    paths:
      - dist/**
      - scenedetect/**
      - tests/**
  push:
    paths:
      - dist/**
      - scenedetect/**
      - tests/**

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04, ubuntu-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Dependencies
        # TODO: `setuptools` is pinned for the Python 3.7 builder and can be unpinned when removed.
        run: |
          python -m pip install --upgrade pip build wheel virtualenv setuptools==62.3.4
          pip install av==9.2 opencv-python-headless --only-binary :all:
          pip install -r requirements_headless.txt

      - name: Checkout test resources
        run: |
          git fetch --depth=1 https://github.com/Breakthrough/PySceneDetect.git refs/heads/resources:refs/remotes/origin/resources
          git checkout refs/remotes/origin/resources -- tests/resources/

      - name: Unit Tests
        run: |
          python -m pytest tests/
      # TODO: Install ffmpeg/mkvtoolnix to run split-video tests. They will be skipped if the tools are unavailable.

      - name: Smoke Test (Module)
        run: |
          python -m scenedetect version
          python -m scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
          python -m scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
          python -m pip uninstall -y scenedetect

      # TODO: Make the version extraction work on powershell so the package smoke tests also run on Windows.
      - name: Build Package
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          python -m build
          echo "scenedetect_version=`python -c \"import scenedetect; print(scenedetect.__version__[1:].replace('-', '.'))\"`" >> "$GITHUB_ENV"

      - name: Smoke Test Package (Source Dist)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          python -m pip install dist/scenedetect-${{ env.scenedetect_version }}.tar.gz
          scenedetect version
          scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
          scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
          python -m pip uninstall -y scenedetect

      - name: Smoke Test Package (Wheel)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          python -m pip install dist/scenedetect-${{ env.scenedetect_version }}-py3-none-any.whl
          scenedetect version
          scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
          scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
          python -m pip uninstall -y scenedetect

      - name: Upload Package
        if: ${{ matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: scenedetect-dist
          path: |
            dist/*.tar.gz
            dist/*.zip
