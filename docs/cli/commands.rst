
.. _cli-commands:

***********************************************************************
Commands
***********************************************************************

Commands can be combined together (order does not matter) to control various input/output options.

``help``, ``version``, and ``about``
=======================================================================

**The** ``help`` **command** prints PySceneDetect options and help information.  Usage:

 * ``help``
    Shows the main `scenedetect` program options and a list of commands.

 * ``help [command]``
    Shows options for a specific command/detector (`help list-scenes`, `help detect-threshold`).

 * ``help all``
    Shows the options and help information for *all* commands.

**The** ``version`` **command** command prints the version of PySceneDetect that is installed.
You can also specify ``--all`` to print out system dependencies.

**The** ``about`` **command** prints PySceneDetect copyright, licensing, and redistribution
information.  This includes a list of all third-party software components that
PySceneDetect uses or interacts with, as well as a reference to the license and
copyright information for each component.


``export-html``
========================================================================

Export scene list to HTML file. Requires ``save-images`` unless --no-images is specified.

Options
------------------------------------------------------------------------

.. option:: --filename NAME, -f NAME

  Filename format to use for the scene list HTML file. You can use the $VIDEO_NAME macro in the file name. Note that you may have to wrap the format name using single quotes. [default: ``$VIDEO_NAME-Scenes.html``]

.. option:: --no-images

  Export the scene list including or excluding the saved images.

.. option:: --image-width pixels, -w pixels

  Width in pixels of the images in the resulting HTML table.

.. option:: --image-height pixels, -h pixels

  Height in pixels of the images in the resulting HTML table.


``list-scenes``
========================================================================

Print scene list and outputs to a CSV file. Default filename is $VIDEO_NAME-Scenes.csv.

Options
------------------------------------------------------------------------

.. option:: --output DIR, -o DIR

  Output directory to save videos to. Overrides global option -o/--output if set.

.. option:: --filename NAME, -f NAME

  Filename format to use for the scene list CSV file. You can use the $VIDEO_NAME macro in the file name. Note that you may have to wrap the name using single quotes. [default: ``$VIDEO_NAME-Scenes.csv``]

.. option:: --no-output-file, -n

  Disable writing scene list CSV file to disk.  If set, -o/--output and -f/--filename are ignored.

.. option:: --quiet, -q

  Suppresses output of the table printed by the list-scenes command.

.. option:: --skip-cuts, -s

  Skips outputting the cutting list as the first row in the CSV file. Set this option if compliance with RFC 4180 is required.


``load-scenes``
========================================================================

Load scenes from CSV instead of detecting. Can be used with CSV generated by ``list-scenes``.
Scenes are loaded using the specified column as cut locations (frame number or timecode).

Examples
------------------------------------------------------------------------

    ``scenedetect -i video.mp4 load-scenes -i scenes.csv``

    ``scenedetect -i video.mp4 load-scenes -i scenes.csv --start-col-name "Start Timecode"``

Options
------------------------------------------------------------------------

.. option:: --input FILE, -i FILE

  Scene list to read cut information from.

.. option:: --start-col-name STRING, -c STRING

  Name of column used to mark scene cuts. [default: ``Start Frame``]

.. option:: --framerate FPS, -f FPS

  Override framerate to use when performing timecode to frame number conversion.


``save-images``
========================================================================

Create images for each detected scene.

Examples
------------------------------------------------------------------------

    ``scenedetect -i video.mp4 save-images``

    ``scenedetect -i video.mp4 save-images --width=1024``

Options
------------------------------------------------------------------------

.. option:: --output DIR, -o DIR

  Output directory to save images to. Overrides global option -o/--output if set.

.. option:: --filename NAME, -f NAME

  Filename format, *without* extension, to use when saving image files. You can use the $VIDEO_NAME, $SCENE_NUMBER, $IMAGE_NUMBER, and $FRAME_NUMBER macros in the file name. Note that you may have to wrap the format in single quotes. [default: ``$VIDEO_NAME-Scene-$SCENE_NUMBER-$IMAGE_NUMBER``]

.. option:: --num-images N, -n N

  Number of images to generate. Will always include start/end frame, unless N = 1, in which case the image will be the frame at the mid-point in the scene. [default: ``3``]

.. option:: --jpeg, -j

  Set output format to JPEG (default).

.. option:: --webp, -w

  Set output format to WebP

.. option:: --quality Q, -q Q

  JPEG/WebP encoding quality, from 0-100 (higher indicates better quality). For WebP, 100 indicates lossless. [default: ``JPEG: 95, WebP: 100``]

.. option:: --png, -p

  Set output format to PNG.

.. option:: --compression C, -c C

  PNG compression rate, from 0-9. Higher values produce smaller files but result in longer compression time. This setting does not affect image quality, only file size. [default: ``3``]

.. option:: --frame-margin N, -m N

  Number of frames to ignore at the beginning and end of scenes when saving images. [default: ``3``]

.. option:: --scale S, -s S

  Optional factor by which saved images are rescaled. A scaling factor of 1 would not result in rescaling. A value <1 results in a smaller saved image, while a value >1 results in an image larger than the original. This value is ignored if either the height, -h, or width, -w, values are specified.

.. option:: --height H, -H H

  Optional value for the height of the saved images. Specifying both the height and width, -w, will resize images to an exact size, regardless of aspect ratio. Specifying only height will rescale the image to that number of pixels in height while preserving the aspect ratio.

.. option:: --width W, -W W

  Optional value for the width of the saved images. Specifying both the width and height, -h, will resize images to an exact size, regardless of aspect ratio. Specifying only width will rescale the image to that number of pixels wide while preserving the aspect ratio.


``split-video``
========================================================================

Split input video using ffmpeg or mkvmerge.

Examples
------------------------------------------------------------------------

    ``scenedetect -i video.mp4 split-video``

    ``scenedetect -i video.mp4 split-video --copy``

Options
------------------------------------------------------------------------

.. option:: --output DIR, -o DIR

  Output directory to save videos to. Overrides global option -o/--output if set.

.. option:: --filename NAME, -f NAME

  File name format to use when saving videos (with or without extension). You can use the $VIDEO_NAME and $SCENE_NUMBER macros in the filename (e.g. $VIDEO_NAME-Part-$SCENE_NUMBER). Note that you may have to wrap the format in single quotes to avoid variable expansion. [default: ``$VIDEO_NAME-Scene-$SCENE_NUMBER``]

.. option:: --quiet, -q

  Hides any output from the external video splitting tool.

.. option:: --copy, -c

  Copy instead of re-encode. Much faster, but less precise. Equivalent to specifying -a "-map 0 -c:v copy -c:a copy".

.. option:: --high-quality, -hq

  Encode video with higher quality, overrides -f option if present. Equivalent to specifying --rate-factor 17 and --preset slow.

.. option:: --rate-factor RATE, -crf RATE

  Video encoding quality (x264 constant rate factor), from 0-100, where lower values represent better quality, with 0 indicating lossless. [default: ``22``]

.. option:: --preset LEVEL, -p LEVEL

  Video compression quality preset (x264 preset). Can be one of: ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, and veryslow. Faster modes take less time to run, but the output files may be larger. [default: ``veryfast``]

.. option:: --args ARGS, -a ARGS

  Override codec arguments/options passed to FFmpeg when splitting and re-encoding scenes. Use double quotes (") around specified arguments. Must specify at least audio/video codec to use (e.g. -a "-c:v [...] -c:a [...]"). [default: ``-map 0 -c:v libx264 -preset veryfast -crf 22 -c:a aac``]

.. option:: --mkvmerge, -m

  Split the video using mkvmerge. Faster than re-encoding, but less precise. The output will be named $VIDEO_NAME-$SCENE_NUMBER.mkv. If set, all options other than -f/--filename, -q/--quiet and -o/--output will be ignored. Note that mkvmerge automatically appends a suffix of "-$SCENE_NUMBER".


``time``
========================================================================

Set start/end/duration of input video.

Values can be specified as frames (NNNN), seconds (NNNN.NNs), or timecode (HH:MM:SS.nnn). For example, to process only the first minute of a video:

    ``scenedetect -i video.mp4 time --end 00:01:00``

    ``scenedetect -i video.mp4 time --duration 60s``

Note that --end and --duration are mutually exclusive (i.e. only one of the two can be set). Lastly, the following is an example using absolute frame numbers to process frames 0 through 1000:

    ``scenedetect -i video.mp4 time --start 0 --end 1000``

Options
------------------------------------------------------------------------

.. option:: --start TIMECODE, -s TIMECODE

  Time in video to begin detecting scenes. TIMECODE can be specified as exact number of frames (-s 100 to start at frame 100), time in seconds followed by s (-s 100s to start at 100 seconds), or a timecode in the format HH:MM:SS or HH:MM:SS.nnn (-s 00:01:40 to start at 1m40s).

.. option:: --duration TIMECODE, -d TIMECODE

  Maximum time in video to process. TIMECODE format is the same as other arguments. Mutually exclusive with --end / -e.

.. option:: --end TIMECODE, -e TIMECODE

  Time in video to end detecting scenes. TIMECODE format is the same as other arguments. Mutually exclusive with --duration / -d.
