language: python
cache: pip

matrix:
  include:
    - os: linux
      dist: xenial
      language: python
      python: "3.6"
    - os: linux
      dist: xenial
      language: python
      python: "3.8"

    - os: linux
      dist: bionic
      language: python
      python: "3.7"
    - os: linux
      dist: bionic
      language: python
      python: "3.8"

    - os: linux
      dist: focal
      language: python
      python: "3.8"
    - os: linux
      dist: focal
      language: python
      python: "3.9"
    - os: linux
      dist: focal
      language: python
      python: "3.10"

install:
  - "python -m pip install --upgrade pip build"
  # Make sure we get latest binary packages of the video input libraries.
  - "python -m pip install av opencv-python-headless --only-binary :all:"
  # Install other required packages and download required test resources.
  - "python -m pip install -r requirements_headless.txt"
  - "git fetch --depth=1 https://github.com/Breakthrough/PySceneDetect.git refs/heads/resources:refs/remotes/origin/resources"
  - "git checkout refs/remotes/origin/resources -- tests/resources/"
  # TODO: When dropping support for Python 3.6, switch to build instead of setuptools.
  - "python -m pip install --upgrade setuptools"
  - "python setup.py sdist bdist_wheel"

script:
  - python -m pytest tests/
  # TODO: Install ffmpeg/mkvtoolnix to run split-video tests.

  # Remove optional dependencies before performing CLI tests
  - python -m pip uninstall -y av

  #
  # Test CLI using source code
  #
  # Test with OpenCV backend
  - python -m scenedetect version
  - python -m scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
  # Test with optional backends
  - "python -m pip install -r requirements_headless.txt --only-binary :all:"
  - python -m scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
  # Cleanup
  - python -m pip uninstall -y scenedetect av

  # Test CLI using source distribution
  - python -m pip install dist/scenedetect-`python -c "import scenedetect; print(scenedetect.__version__[1:])"`.tar.gz
  # Test with OpenCV backend
  - scenedetect version
  - scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
  # Test with optional backends
  - "python -m pip install -r requirements_headless.txt --only-binary :all:"
  - scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
  # Cleanup
  - python -m pip uninstall -y scenedetect av

  # Test CLI using binary wheel
  - python -m pip install dist/scenedetect-`python -c "import scenedetect; print(scenedetect.__version__[1:])"`-py3-none-any.whl
  # Test with OpenCV backend
  - scenedetect version
  - scenedetect -i tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s
  # Test with optional backends
  - "python -m pip install -r requirements_headless.txt --only-binary :all:"
  - scenedetect -i tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s
  # Cleanup
  - python -m pip uninstall -y scenedetect av
